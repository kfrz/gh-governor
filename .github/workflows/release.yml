name: Build & Release

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.20.7

    - name: Run Tests
      run: go test ./...

    - name: Build
      run: go build -o gh-governor

    - name: Decode GPG key
      run: echo "${{ secrets.GPG_PRIVATE_KEY }}" | base64 -d > private_key.gpg

    - name: Import GPG Key
      run: |
        gpg --batch --yes --import private_key.gpg
        git config --global user.signingkey $(gpg --list-secret-keys --keyid-format LONG | grep sec | awk '{print $2}' | awk -F'/' '{print $2}')
        git config --global commit.gpgsign true

    - name: Sign Binary with GPG
      run: |
        echo "${{ secrets.GPG_PASSPHRASE }}" | base64 -d | gpg --batch --yes --pinentry-mode loopback --passphrase-fd 0 --detach-sign --armor gh-governor

    - name: Archive binaries and signatures
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: |
          gh-governor
          gh-governor.asc

  # Don't release on RCs, only on tags that start with v, e.g. v1.0.0
  release:
    if: startsWith(github.ref, 'refs/tags/v') && !endsWith(github.ref, '-rc')
    needs: build-test
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: binaries

    - name: Create Release
      id: create_release
      uses: gh-actions/create-release@v1.1.4
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset (Binary)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./gh-governor
        asset_name: gh-governor
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset (Signature)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./gh-governor.asc
        asset_name: gh-governor.asc
        asset_content_type: application/pgp-signature
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
